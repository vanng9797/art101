char currentkey = '1';
int counter = 0;
PImage b;
PImage b2;
PImage b3;
color bgc = color(255);

void setup() {

size(600, 600);
background(0,50);
smooth();
  b = loadImage("Grunge-Pack_04.png"); 
  b2 = loadImage("Grunge-Pack_07.png");
   b3 = loadImage("Grunge-Pack_12.png");
}

void draw() {

// triggering the clear_print function
if(keyPressed) {
clear_print(); 
}
// triggering the newkeychoice
if(mousePressed) {
  drawChoice(); 
}

 if (frameCount < 2000 ) {
  saveFrame("images/face-######.png");
  } else {  
    exit();  
  }
}


void drawChoice() {
  // the key mapping if statemens that you can change to do anything you want.
  // just make sure each key option has the a stroke or fill and then what type of 
  // graphic function
 
   
 // key global variable contains whatever key was last pressed 
 char currentkey = key;
   
switch(currentkey) {
case '1': 
  println("1");  // black line
  drawline1(color((255),random(mouseY), random(mouseX)), mouseX, mouseY, pmouseX, pmouseY); 
  break;
  
  
case '2': 
  println("2");  // red line
  drawSquare(color(0,random(0,100),255), mouseX, mouseY, pmouseX, pmouseY);
  break;
case '3': 
  println("3");  // green line
 drawArc();
  break;
case '4': 
  println("4");  // fat purple line
  drawShape();
  break;
case '5': 
  println("5");  // erase with bg color
  eraser(bgc,mouseX, mouseY,25);
  break;
default:             // Default executes if the case labels
  println("None");   // don't match the switch parameter
  break;   
}
  
}


void drawEllipse(){
    stroke(random(0,255),255,255);
    fill(counter++,255,255);
    ellipse(mouseX,mouseY,random(50),50);  
if (counter > height) {
  counter = 20;
} else {
  counter+=20;
}
}
 void drawArc(){
 
    stroke(100,100,100);
    noFill();
  //arc(mouseX, mouseY, 20, 20, 20, PI+1.2);

 arc(mouseX, mouseY, 30, 20, 1, PI);
  //arc(mouseX, mouseY, 15, 60, 5, PI-2);


 }   
void drawline1(color k, int lx,int ly, int px,int py) {
 strokeWeight(5);
  stroke(k);
  line(lx, ly, px, py); 
}
void drawSquare(color k, int lx,int ly, int px,int py) {
 strokeWeight(5);
  stroke(k);
  rect(lx, ly, 25, 25); 
}
void drawShape() {
  pushMatrix();
  translate(mouseX, mouseY);
  rotate(radians(counter)); 
  scale(.2);
  drawEllipse();
  popMatrix();
  pushMatrix();
  translate(mouseX, mouseY);
  rotate(radians(counter)); 
  scale(.4);
  drawEllipse();
  popMatrix();

  counter++;
}

void eraser(color k,int lx,int ly,int sz) {
  stroke(k);
  ellipse(lx, ly, sz,sz);
}


void clear_print() {

// these 2 options let you choose between clearing the background
// and saveing the current image as a file.
  if (key == 'x' || key == 'X') {
     background(0,50);
  } else if (key == 'p' || key == 'P') {
     saveFrame("x_xxx_####.png");
     //this will save the name as the intials and a random counting number.
     // it will always be larger in value then the last one.
     delay(500);
  }

}



 